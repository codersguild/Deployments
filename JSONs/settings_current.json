{
    "workbench.colorTheme": "Ra Light",
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "workbench.iconTheme": "eq-material-theme-icons-darker",
    "workbench.productIconTheme": "material-product-icons",
    "workbench.startupEditor": "newUntitledFile",
    "terminal.integrated.sendKeybindingsToShell": true,
    "breadcrumbs.enabled": false,
    "editor.fontLigatures": true,
    "workbench.colorCustomizations": {
      "terminal.background": "#00101f",
      "terminal.foreground": "#54ee0d",
      "terminalCursor.background": "#0df105",
      "terminalCursor.foreground": "#1df309",
      "terminal.ansiBlack": "#1D2021",
      "terminal.ansiBlue": "#0D6678",
      "terminal.ansiBrightBlack": "#665C54",
      "terminal.ansiBrightBlue": "#0D6678",
      "terminal.ansiBrightCyan": "#8BA59B",
      "terminal.ansiBrightGreen": "#95C085",
      "terminal.ansiBrightMagenta": "#8F4673",
      "terminal.ansiBrightRed": "#FB543F",
      "terminal.ansiBrightWhite": "#FDF4C1",
      "terminal.ansiBrightYellow": "#FAC03B",
      "terminal.ansiCyan": "#8BA59B",
      "terminal.ansiGreen": "#95C085",
      "terminal.ansiMagenta": "#8F4673",
      "terminal.ansiRed": "#FB543F",
      "terminal.ansiWhite": "#A89984",
      "terminal.ansiYellow": "#FAC03B"
    },
    "editor.tokenColorCustomizations": {
      "textMateRules": [
        {
          "scope": [
            "comment",
            "emphasis",
            "entity.name.method.js",
            "entity.name.class.js",
            "entity.name.tag.doctype",
            "entity.other.attribute-name",
            "entity.other.attribute-name.tag.jade",
            "entity.other.attribute-name.tag.pug",
            "keyword",
            "keyword.control",
            "keyword.operator.comparison",
            "keyword.control.flow.js",
            "keyword.control.flow.ts",
            "keyword.control.flow.tsx",
            "keyword.control.ruby",
            "keyword.control.module.ruby",
            "keyword.control.class.ruby",
            "keyword.control.def.ruby",
            "keyword.control.loop.js",
            "keyword.control.loop.ts",
            "keyword.control.import.js",
            "keyword.control.import.ts",
            "keyword.control.import.tsx",
            "keyword.control.from.js",
            "keyword.control.from.ts",
            "keyword.control.from.tsx",
            "keyword.operator.expression.delete",
            "keyword.operator.new",
            "keyword.operator.expression",
            "keyword.operator.cast",
            "keyword.operator.relational",
            "keyword.operator.sizeof",
            "keyword.operator.logical.python",
            "italic",
            "markup.italic",
            "markup.quote",
            "markup.changed",
            "markup.italic.markdown",
            "markup.quote.markdown",
            "markup.deleted.diff",
            "markup.inserted.diff",
            "meta.delimiter.period",
            "meta.diff.header.git",
            "meta.diff.header.from-file",
            "meta.diff.header.to-file",
            "meta.tag.sgml.doctype",
            "meta.var.expr",
            "meta.class meta.method.declaration meta.var.expr storage.type.js",
            "meta.decorator punctuation.decorator",
            "meta.selector",
            "punctuation.accessor",
            "punctuation.definition.comment",
            "punctuation.definition.template-expression.begin",
            "punctuation.definition.template-expression.end",
            "punctuation.section.embedded",
            "quote",
            "source.js constant.other.object.key.js string.unquoted.label.js",
            "source.go keyword.package.go",
            "source.go keyword.import.go",
            "source.go keyword.function.go",
            "source.go keyword.type.go",
            "source.go keyword.struct.go",
            "source.go keyword.interface.go",
            "source.go keyword.const.go",
            "source.go keyword.var.go",
            "source.go keyword.map.go",
            "source.go keyword.channel.go",
            "source.go keyword.control.go",
            "storage",
            "storage.type",
            "storage.modifier",
            "storage.type.property.js",
            "storage.type.property.ts",
            "storage.type.property.tsx",
            "tag.decorator.js entity.name.tag.js",
            "tag.decorator.js",
            "text.html.basic entity.other.attribute-name.html",
            "text.html.basic entity.other.attribute-name",
            "variable.language",
            "variable.other.object.property",
            "comment",
            "entity.name.type.class",
            "keyword",
            "constant",
            "storage.modifier",
            "storage.type.class.js",
            "invalid",
            "keyword.operator",
            "constant.numeric.css",
            "keyword.other.unit.px.css",
            "constant.numeric.decimal.js",
            "constant.numeric.json"
          ],
          "settings": {
            "fontStyle": ""
          }
        }
      ]
    },
    "python.languageServer": "Default",
    "todo-tree.tree.showScanModeButton": false,
    "todo-tree.highlights.defaultHighlight": {
        "type": "text",
        "foreground": "red",
        "opacity": 95,
        "iconColour": "blue"
    },
    "todo-tree.highlights.customHighlight": {
        "TODO": {
            "icon": "alert",
            "type": "block",
            "fontWeight": "bold",
            "foreground": "green",
            "iconColour": "blue",
            "background": "yellow",
            "gutterIcon": true
        },
        "ASSUME": {
            "icon": "check",
            "type": "block",
            "foreground": "white",
            "iconColour": "white",
            "fontWeight": "bold",
            "background": "blue",
            "gutterIcon": true
        },
        "ASSERT": {
          "icon": "beaker",
          "type": "block",
          "fontWeight": "bold",
          "foreground": "black",
          "iconColour": "red",
          "background": "red",
          "gutterIcon": true
        },
        "WORKIT": {
          "icon": "beaker",
          "type": "block",
          "fontWeight": "bold",
          "foreground": "black",
          "iconColour": "red",
          "background": "red",
          "gutterIcon": true
        },
        "DUMPIT": {
          "icon": "beaker",
          "type": "block",
          "fontWeight": "bold",
          "foreground": "white",
          "iconColour": "red",
          "background": "blue",
          "gutterIcon": true
        },
        "FIXME": {
            "foreground": "green",
            "iconColour": "red",
            "type": "block",
            "fontWeight": "bold",
            "gutterIcon": true
        },
        "COMMENT": {
            "icon": "bell",
            "type": "block",
            "fontWeight": "bold",
            "foreground": "white",
            "iconColour": "green",
            "background": "blue",
            "gutterIcon": true
        },
        "ASK": {
          "icon": "question",
          "type": "block",
          "fontWeight": "bold",
          "foreground": "teal",
          "iconColour": "black",
          "background": "white",
          "gutterIcon": true
        }
    },
    "todo-tree.general.tags": [
      "XXX",
      "TODO",
      "HACK",
      "FIXME",
      "COMMENT",
      "ASSERT",
      "ASSUME",
      "INVARIANT",
      "BUG",
      "ASK",
      "TASK",
      "DUMPIT",
      "WORKIT",
      "[ ]",
      "[x]"
    ],
    "cmake.configureOnOpen": false,
    "markdown.marp.enableHtml": true,
    "markdown.marp.exportType": "pptx",
    "explorer.confirmDragAndDrop": false,
    "C_Cpp.updateChannel": "Insiders",
    "workbench.editorAssociations": {
      "*.ipynb": "jupyter-notebook"
    },
    "kite.showWelcomeNotificationOnStartup": false,
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
    "editor.inlineHints.fontFamily": "'Cascadia Code PL', Consolas, 'Courier New', monospace, Menlo, menlo",
    "files.exclude": {
      "**/.classpath": true,
      "**/.project": true,
      "**/.settings": true,
      "**/.factorypath": true
    },
    "notebook.cellToolbarLocation": {
      "default": "right",
      "jupyter-notebook": "left"
    },
    "editor.formatOnPaste": true,
    "editor.fontSize": 19,
    "editor.fontFamily": "Fira Code Light",
    "editor.cursorStyle": "block",
    "editor.wordWrap": "on",
    "tabnine.experimentalAutoImports": true,
    "workbench.editor.untitled.hint": "hidden",
    "svg.preview.mode": "svg",
    "editor.minimap.enabled": false,
    "terminal.integrated.defaultProfile.linux": "zsh",
    "terminal.explorerKind": "external",
    "editor.cursorBlinking": "smooth",
    "editor.hideCursorInOverviewRuler": true,
    "terminal.integrated.cursorBlinking": true,
    "editor.cursorSmoothCaretAnimation": true,
    "editor.suggest.localityBonus": true,
    "terminal.integrated.allowMnemonics": true,
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.enableBell": true,
    "C_Cpp.intelliSenseEngine": "Disabled",
    "js/ts.implicitProjectConfig.checkJs": true,
    "csharp.semanticHighlighting.enabled": true,
    "redhat.telemetry.enabled": true,
    "clangd.onConfigChanged": "restart",
    "editor.defaultFormatter": "remimarsal.prettier-now",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "modificationsIfAvailable",
    "editor.bracketPairColorization.enabled": true,
    "editor.definitionLinkOpensInPeek": true,
    "workbench.view.alwaysShowHeaderActions": true,
    "workbench.editor.autoLockGroups": {
      "workbench.input.interactive": true
    },
    "workbench.editor.closeOnFileDelete": true,
    "workbench.editor.enablePreviewFromCodeNavigation": true,
    "workbench.editor.enablePreviewFromQuickOpen": true,
    "workbench.editor.highlightModifiedTabs": true,
    "editor.renderWhitespace": "trailing",
    "explorer.confirmDelete": false,
    "editor.mouseWheelScrollSensitivity": 5,
    "jupyter.askForKernelRestart": false,
    "files.maxMemoryForLargeFilesMB": 8192,
    "settingsSync.ignoredExtensions": [    
    ]
}
